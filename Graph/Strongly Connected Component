#include<bits/stdc++.h>
const int mod=1e9+7;
void dfs(int node,vector<int>&vis,vector<int>adj[],stack<int>&st)
{
    vis[node]=1;
    for(auto &it:adj[node])
    {
        if(!vis[it])
        {
            dfs(it,vis,adj,st);
        }
    }
    st.push(node);
}

void dfs2(int node,vector<int>&vis,vector<int>adjT[],vector<int>&ans)
{
    vis[node]=1;
    for(auto &it:adjT[node])
    {
        if(!vis[it])
        {
            dfs2(it,vis,adjT,ans);
        }
    }
    ans.push_back(node);
}

int kosaraju(int n,vector<int>adj[])
{
    vector<int>vis(n);
    stack<int>st;
    for(int i=1;i<n;++i)
    {
         if(!vis[i])
         {
             dfs(i,vis,adj,st);
         }
    }

    vector<int>adjT[n];
    for (int i = 1; i < n; ++i) 
    {
        vis[i]=0;
        for(auto &it:adj[i])
        adjT[it].push_back(i);
    }
    int scc=0;
    while(!st.empty())
    {
        int node=st.top();
        st.pop();
        if(!vis[node])
        {
            scc++;
            dfs2(node,vis,adjT,temp);
        }
    }
    return scc;
}

